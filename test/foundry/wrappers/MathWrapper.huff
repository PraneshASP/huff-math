#include '../../../src/Math.huff'

/* Interface */
#define function addNumbers(uint256,uint256) nonpayable returns (uint256)
#define function subNumbers(uint256,uint256) nonpayable returns (uint256)
#define function multiplyNumbers(uint256,uint256) nonpayable returns (uint256)
#define function divideNumbers(uint256,uint256) nonpayable returns (uint256)
#define function abs(uint256,uint256) nonpayable returns (uint256)

#define macro ADD_WRAPPER() = takes (2) returns (1) {
    0x04 calldataload    // [num1]
    0x24 calldataload    // [num2, num1] 
    ADD_NUMBERS()        // [num2+num1]
    0x00 mstore          // []
    0x20 0x00 return     // []  
 }

 #define macro SUB_WRAPPER() = takes (2) returns (1) {
    0x04 calldataload    // [num1]
    0x24 calldataload    // [num2, num1] 
    SUB_NUMBERS()        // [num1-num2]
    0x00 mstore          // []
    0x20 0x00 return     // []  
 }

  #define macro MULTIPLY_WRAPPER() = takes (2) returns (1) {
    0x04 calldataload    // [num1]
    0x24 calldataload    // [num2, num1] 
    MULTIPLY_NUMBERS()   // [num2*num1]
    0x00 mstore          // []
    0x20 0x00 return     // []  
 }

  #define macro DIVIDE_WRAPPER() = takes (2) returns (1) {
    0x04 calldataload    // [num1]
    0x24 calldataload    // [num2, num1] 
    DIVIDE_NUMBERS()     // [num1/num2]
    0x00 mstore          // []
    0x20 0x00 return     // []  
 }

  #define macro ABS_WRAPPER() = takes (2) returns (1) {
    0x04 calldataload    // [num1]
    0x24 calldataload    // [num2, num1] 
    ABS()                // [ABS]
    0x00 mstore          // []
    0x20 0x00 return     // []  
 }




#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 
    
    // Extract the function singature
    0xe0 shr

    // Jump table
    dup1 0xef9fc50b eq  addNumbers      jumpi
    dup1 0x9c0a2b51 eq  subNumbers      jumpi
    dup1 0xd3f3cd7b eq  multiplyNumbers jumpi
    dup1 0x8fce12ed eq  divideNumbers   jumpi
    dup1 0xe093a157 eq  abs             jumpi


    addNumbers:
        ADD_WRAPPER()

    subNumbers:
        SUB_WRAPPER()
   
    multiplyNumbers:
        MULTIPLY_WRAPPER()

     divideNumbers:
        DIVIDE_WRAPPER()

    abs:
        ABS_WRAPPER()

}
